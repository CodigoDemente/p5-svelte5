# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and Release CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  label:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org/
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

      - name: Lint
        run: pnpm run lint

      - name: Build
        run: pnpm build

  release:
    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    needs: build

    environment: production

    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org/
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

      # PNPM does not support auditing signatures yet
      # - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
      #   run: pnpm audit signatures

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm exec semantic-release
